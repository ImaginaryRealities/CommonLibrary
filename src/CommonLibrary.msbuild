<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003"
         ToolsVersion="4.0"
         DefaultTargets="Build">
  <!--
  
  CommonLibrary.msbuild
  
  This script is used by Microsoft's MSBuild tool to build and package the
  ImaginaryRealities Common Library for deployment to consumers using NuGet.
  
  Copyright 2013 ImaginaryRealities, LLC
  
  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the software without restriction, including without limitation the right
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:
  
  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.
  
  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  SOFTWARE.
  
  -->
  
  <PropertyGroup>
    <SolutionPath>$(MSBuildProjectDirectory)\CommonLibrary.sln</SolutionPath>
    <OutputPath>$(MSBuildProjectDirectory)\..\_build</OutputPath>
    <SolutionDir>$(MSBuildProjectDirectory)</SolutionDir>
    <RestorePackages>true</RestorePackages>
    <BuildPackage>true</BuildPackage>
    <PackageOutputDir>$(OutputPath)\NuGet</PackageOutputDir>
    <ProjectPath>$(MSBuildProjectDirectory)\ImaginaryRealities.CommonLibrary.nuspec</ProjectPath>
    <BuildVersion Condition="'$(BuildVersion)'==''">1.0.0</BuildVersion>
    <Configuration>Release</Configuration>
  </PropertyGroup>

  <ItemGroup>
    <BuildConfigurations Include="Debug"/>
    <BuildConfigurations Include="Release"/>
  </ItemGroup>

  <Import Project="packages\ImaginaryRealities.MSBuildExtensions.1.0.0\tools\MSBuildExtensions.targets"/>
  
  <!--
  
  This target will build the Common Library and will package the library for
  deployment using NuGet.
  
  -->
  <PropertyGroup>
    <BuildDependsOn>
      _CreateOutputDirectories;
      _BuildAllConfigurations
    </BuildDependsOn>
  </PropertyGroup>
  <Target Name="Build" DependsOnTargets="$(BuildDependsOn)"/>

  <!--
  
  The Clean target will remove all build-generated files and directories from
  the project workspace.
  
  -->
  <Target Name="Clean">
    <MSBuild Projects="$(SolutionPath)"
             Targets="Clean"
             Properties="Configuration=%(BuildConfigurations.Identity)"/>
    <RemoveDir Directories="$(OutputPath)"/>  
  </Target>

  <!--
  
  The _CreateOutputDirectories target will create the directories that are
  used for storing temporary build files or the final NuGet packages for the
  project.
  
  -->
  <Target Name="_CreateOutputDirectories">
    <MakeDir Directories="$(PackageOutputDir)"
             Condition="!Exists('$(PackageOutputDir)')"/>
  </Target>
  
  <!--
  
  The _BuildAllConfigurations target will build all configurations of the
  ImaginaryRealities Common Library project.
  
  -->
  <Target Name="_BuildAllConfigurations">
    <MSBuild Projects="$(MSBuildProjectFullPath)"
             Targets="_BuildConfiguration"
             Properties="Configuration=%(BuildConfigurations.Identity)"/>
  </Target>
  
  <!--
  
  The _BuildConfiguration target will build a single configuration of the
  ImaginaryRealities Common Library project.
  
  -->
  <PropertyGroup>
    <BuildConfigurationDependsOn>_BuildSolution</BuildConfigurationDependsOn>
  </PropertyGroup>
  <Target Name="_BuildConfiguration" DependsOnTargets="$(BuildConfigurationDependsOn)"/>
  
  <!--
  
  The _BuildSolution target will build all of the projects in the Visual
  Studio solution file.
  
  -->
  <Target Name="_BuildSolution">
    <MSBuild Projects="$(SolutionPath)"
             Targets="Build"
             Properties="Configuration=$(Configuration)"/>
  </Target>
  
  <Import Project=".nuget\NuGet.targets"/>
</Project>